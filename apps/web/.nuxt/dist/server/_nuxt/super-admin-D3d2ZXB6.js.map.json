{"file":"super-admin-D3d2ZXB6.js","mappings":";;;;;;;;;;;;;;;;;;AAKE,MAAA,aAAa,0BAAa,OAAA,OAAA;AAAA,MAAA,QAAA;AAE1B,QAAK,OAAK,aAAe;AACvB,MAAA,CAAA,KAAO,eAAa,CAAA,KAAM,cAAe;AAC3C,WAAA,WAAA,EAAA,MAAA,eAAA,OAAA,EAAA,UAAA,GAAA,SAAA,GAAA;AAAA,EAEA;AACE,MAAA,CAAA,KAAI,MAAA;AACF,QAAA;;eACO,SAAO,IAAAA,aAAA,MAAA,KAAA,iBAAA,CAAA,GAAA,MAAA,QAAA,UAAA;AAAA;AAAA,IACd,SAAA;AACA,cAAO,KAAA,wBAAmB,KAAe;AAC3C,aAAA,WAAA,EAAA,MAAA,eAAA,OAAA,EAAA,UAAA,GAAA,SAAA,GAAA;AAAA,IACF;AAAA,EAEA;AACE,MAAA,KAAO,eAAW,eAAY;AAChC,WAAA,WAAA,YAAA;AAAA,EACF;;","names":["__executeAsync"],"sources":["../../../../middleware/super-admin.ts"],"sourcesContent":["import { defineNuxtRouteMiddleware, navigateTo } from 'nuxt/app'\nimport type { RouteLocationNormalized } from 'vue-router'\nimport { useAuthStore } from '@/stores/auth'\n\nexport default defineNuxtRouteMiddleware(async (to: RouteLocationNormalized) => {\n  const auth = useAuthStore()\n\n  if (!auth.accessToken || !auth.refreshToken) {\n    return navigateTo({ path: '/auth/login', query: { redirect: to.fullPath } })\n  }\n\n  if (!auth.user) {\n    try {\n      await auth.fetchCurrentUser()\n    } catch (error) {\n      console.warn('failed to fetch user', error)\n      return navigateTo({ path: '/auth/login', query: { redirect: to.fullPath } })\n    }\n  }\n\n  if (auth.user?.role !== 'SUPER_ADMIN') {\n    return navigateTo('/dashboard')\n  }\n})\n"],"version":3}
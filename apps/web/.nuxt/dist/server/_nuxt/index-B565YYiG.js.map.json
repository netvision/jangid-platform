{"file":"index-B565YYiG.js","mappings":"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","names":[],"sources":["../../../../app.config.ts","../../../../virtual:nuxt:%2FVolumes%2FUntitled%2Fdev%2Fjangid%2Fapps%2Fweb%2F.nuxt%2Fapp.config.mjs","../../../../../../node_modules/nuxt/dist/app/config.js","../../../../virtual:nuxt:%2FVolumes%2FUntitled%2Fdev%2Fjangid%2Fapps%2Fweb%2F.nuxt%2Ficon-collections.mjs","../../../../../../node_modules/nuxt-icon/dist/runtime/utils/index.mjs"],"sourcesContent":["export default defineAppConfig({\n  nuxtIcon: {\n    size: '1em',\n    class: undefined,\n    aliases: {}\n  }\n})\n","\nimport { _replaceAppConfig } from '#app/config'\nimport { defuFn } from 'defu'\n\nconst inlineConfig = {\n  \"nuxt\": {}\n}\n\n// Vite - webpack is handled directly in #app/config\nif (import.meta.hot) {\n  import.meta.hot.accept((newModule) => {\n    _replaceAppConfig(newModule.default)\n  })\n}\n\nimport cfg0 from \"/Volumes/Untitled/dev/jangid/apps/web/app.config.ts\"\n\nexport default /*@__PURE__*/ defuFn(cfg0, inlineConfig)\n","import { reactive } from \"vue\";\nimport { klona } from \"klona\";\nimport { useNuxtApp } from \"./nuxt.js\";\nimport __appConfig from \"#build/app.config.mjs\";\nexport const _getAppConfig = () => __appConfig;\nfunction isPojoOrArray(val) {\n  return Array.isArray(val) || !!val && typeof val === \"object\" && val.constructor?.name === \"Object\";\n}\nfunction deepDelete(obj, newObj) {\n  for (const key in obj) {\n    const val = newObj[key];\n    if (!(key in newObj)) {\n      delete obj[key];\n    }\n    if (isPojoOrArray(val)) {\n      deepDelete(obj[key], newObj[key]);\n    }\n  }\n}\nfunction deepAssign(obj, newObj) {\n  for (const key in newObj) {\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const val = newObj[key];\n    if (isPojoOrArray(val)) {\n      const defaultVal = Array.isArray(val) ? [] : {};\n      obj[key] ||= defaultVal;\n      deepAssign(obj[key], val);\n    } else {\n      obj[key] = val;\n    }\n  }\n}\nexport function useAppConfig() {\n  const nuxtApp = useNuxtApp();\n  nuxtApp._appConfig ||= import.meta.server ? klona(__appConfig) : reactive(__appConfig);\n  return nuxtApp._appConfig;\n}\nexport function _replaceAppConfig(newConfig) {\n  const appConfig = useAppConfig();\n  deepAssign(appConfig, newConfig);\n  deepDelete(appConfig, newConfig);\n}\nexport function updateAppConfig(appConfig) {\n  const _appConfig = useAppConfig();\n  deepAssign(_appConfig, appConfig);\n}\nif (import.meta.dev) {\n  if (import.meta.hot) {\n    import.meta.hot.accept((newModule) => {\n      const newConfig = newModule?._getAppConfig();\n      if (newConfig) {\n        _replaceAppConfig(newConfig);\n      }\n    });\n  }\n  if (import.meta.webpackHot) {\n    import.meta.webpackHot.accept(\"#build/app.config.mjs\", () => {\n      _replaceAppConfig(__appConfig);\n    });\n  }\n}\n","export default [\"fluent-emoji-high-contrast\",\"streamline-ultimate-color\",\"streamline-freehand-color\",\"streamline-kameleon-color\",\"streamline-stickies-color\",\"material-symbols-light\",\"streamline-plump-color\",\"streamline-sharp-color\",\"streamline-cyber-color\",\"streamline-flex-color\",\"cryptocurrency-color\",\"streamline-ultimate\",\"streamline-freehand\",\"material-icon-theme\",\"icon-park-outline\",\"icon-park-twotone\",\"fluent-emoji-flat\",\"emojione-monotone\",\"streamline-emojis\",\"heroicons-outline\",\"simple-line-icons\",\"material-symbols\",\"streamline-plump\",\"streamline-sharp\",\"streamline-cyber\",\"streamline-pixel\",\"streamline-block\",\"qlementine-icons\",\"streamline-color\",\"streamline-logos\",\"flat-color-icons\",\"icon-park-solid\",\"pepicons-pencil\",\"streamline-flex\",\"heroicons-solid\",\"pepicons-print\",\"cryptocurrency\",\"pixelarticons\",\"bitcoin-icons\",\"system-uicons\",\"sidekickicons\",\"devicon-plain\",\"entypo-social\",\"token-branded\",\"grommet-icons\",\"meteor-icons\",\"svg-spinners\",\"pepicons-pop\",\"dinkie-icons\",\"fluent-color\",\"vscode-icons\",\"simple-icons\",\"circle-flags\",\"medical-icon\",\"icomoon-free\",\"fluent-emoji\",\"majesticons\",\"humbleicons\",\"rivet-icons\",\"radix-icons\",\"fa7-regular\",\"skill-icons\",\"emojione-v1\",\"academicons\",\"healthicons\",\"fa6-regular\",\"fluent-mdl2\",\"lucide-lab\",\"akar-icons\",\"lets-icons\",\"ant-design\",\"gravity-ui\",\"teenyicons\",\"streamline\",\"file-icons\",\"catppuccin\",\"fa7-brands\",\"game-icons\",\"foundation\",\"fa6-brands\",\"fa-regular\",\"mono-icons\",\"mdi-light\",\"iconamoon\",\"eos-icons\",\"gridicons\",\"duo-icons\",\"hugeicons\",\"lineicons\",\"zondicons\",\"heroicons\",\"fa7-solid\",\"icon-park\",\"arcticons\",\"meteocons\",\"dashicons\",\"fa6-solid\",\"fa-brands\",\"websymbol\",\"fontelico\",\"mingcute\",\"flowbite\",\"proicons\",\"guidance\",\"famicons\",\"bytesize\",\"marketeq\",\"nonicons\",\"brandico\",\"openmoji\",\"emojione\",\"flagpack\",\"fa-solid\",\"fontisto\",\"si-glyph\",\"pepicons\",\"line-md\",\"iconoir\",\"tdesign\",\"formkit\",\"clarity\",\"octicon\",\"pajamas\",\"codicon\",\"devicon\",\"twemoji\",\"noto-v1\",\"fxemoji\",\"raphael\",\"flat-ui\",\"topcoat\",\"feather\",\"tabler\",\"mynaui\",\"lucide\",\"circum\",\"carbon\",\"lsicon\",\"nimbus\",\"fluent\",\"memory\",\"garden\",\"entypo\",\"icons8\",\"subway\",\"vaadin\",\"solar\",\"basil\",\"pixel\",\"typcn\",\"prime\",\"cuida\",\"stash\",\"charm\",\"quill\",\"codex\",\"picon\",\"logos\",\"token\",\"covid\",\"weui\",\"mage\",\"maki\",\"ooui\",\"unjs\",\"noto\",\"flag\",\"iwwa\",\"gala\",\"zmdi\",\"bpmn\",\"mdi\",\"uil\",\"bxs\",\"uim\",\"uit\",\"uis\",\"jam\",\"ion\",\"cil\",\"uiw\",\"oui\",\"nrk\",\"cib\",\"bxl\",\"cbi\",\"cif\",\"gis\",\"map\",\"geo\",\"fad\",\"eva\",\"wpf\",\"whh\",\"ic\",\"ri\",\"si\",\"bx\",\"gg\",\"ci\",\"fe\",\"mi\",\"ep\",\"bi\",\"ph\",\"ix\",\"ei\",\"f7\",\"wi\",\"la\",\"fa\",\"oi\",\"et\",\"el\",\"ls\",\"vs\",\"il\",\"ps\"]","import iconCollections from \"#icon-collections\";\nexport function resolveIconName(name = \"\") {\n  let prefix;\n  let provider = \"\";\n  if (name[0] === \"@\" && name.includes(\":\")) {\n    provider = name.split(\":\")[0].slice(1);\n    name = name.split(\":\").slice(1).join(\":\");\n  }\n  if (name.startsWith(\"i-\")) {\n    name = name.replace(/^i-/, \"\");\n    for (const collectionName of iconCollections) {\n      if (name.startsWith(collectionName)) {\n        prefix = collectionName;\n        name = name.slice(collectionName.length + 1);\n        break;\n      }\n    }\n  } else if (name.includes(\":\")) {\n    const [_prefix, _name] = name.split(\":\");\n    prefix = _prefix;\n    name = _name;\n  }\n  return {\n    provider,\n    prefix: prefix || \"\",\n    name: name || \"\"\n  };\n}\n"],"version":3}